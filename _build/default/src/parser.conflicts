
** Conflict (shift/reduce) in state 34.
** Tokens involved: Star Slash Plus Neq Minus Less Leq Greater Geq Eq
** The following explanations concentrate on token Star.
** This state is reached from program after reading:

expr Eq expr

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

program 
expr_list EOF 
expr Semi expr_list 
(?)

** In state 34, looking ahead at Star, shifting is permitted
** because of the following sub-derivation:

expr Eq expr 
        expr . Star expr 

** In state 34, looking ahead at Star, reducing production
** expr -> expr Eq expr
** is permitted because of the following sub-derivation:

expr Star expr // lookahead token appears
expr Eq expr . 

** Conflict (shift/reduce) in state 32.
** Tokens involved: Star Slash Plus Neq Minus Less Leq Greater Geq Eq
** The following explanations concentrate on token Star.
** This state is reached from program after reading:

expr Geq expr

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

program 
expr_list EOF 
expr Semi expr_list 
(?)

** In state 32, looking ahead at Star, shifting is permitted
** because of the following sub-derivation:

expr Geq expr 
         expr . Star expr 

** In state 32, looking ahead at Star, reducing production
** expr -> expr Geq expr
** is permitted because of the following sub-derivation:

expr Star expr // lookahead token appears
expr Geq expr . 

** Conflict (shift/reduce) in state 30.
** Tokens involved: Star Slash Plus Neq Minus Less Leq Greater Geq Eq
** The following explanations concentrate on token Star.
** This state is reached from program after reading:

expr Greater expr

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

program 
expr_list EOF 
expr Semi expr_list 
(?)

** In state 30, looking ahead at Star, shifting is permitted
** because of the following sub-derivation:

expr Greater expr 
             expr . Star expr 

** In state 30, looking ahead at Star, reducing production
** expr -> expr Greater expr
** is permitted because of the following sub-derivation:

expr Star expr // lookahead token appears
expr Greater expr . 

** Conflict (shift/reduce) in state 28.
** Tokens involved: Neq Less Leq Greater Geq Eq
** The following explanations concentrate on token Neq.
** This state is reached from program after reading:

expr Minus expr

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

program 
expr_list EOF 
expr Semi expr_list 
(?)

** In state 28, looking ahead at Neq, reducing production
** expr -> expr Minus expr
** is permitted because of the following sub-derivation:

expr Neq expr // lookahead token appears
expr Minus expr . 

** In state 28, looking ahead at Neq, shifting is permitted
** because of the following sub-derivation:

expr Minus expr 
           expr . Neq expr 

** Conflict (shift/reduce) in state 26.
** Tokens involved: Star Slash Plus Neq Minus Less Leq Greater Geq Eq
** The following explanations concentrate on token Star.
** This state is reached from program after reading:

expr Leq expr

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

program 
expr_list EOF 
expr Semi expr_list 
(?)

** In state 26, looking ahead at Star, shifting is permitted
** because of the following sub-derivation:

expr Leq expr 
         expr . Star expr 

** In state 26, looking ahead at Star, reducing production
** expr -> expr Leq expr
** is permitted because of the following sub-derivation:

expr Star expr // lookahead token appears
expr Leq expr . 

** Conflict (shift/reduce) in state 24.
** Tokens involved: Neq Less Leq Greater Geq Eq
** The following explanations concentrate on token Neq.
** This state is reached from program after reading:

expr Plus expr

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

program 
expr_list EOF 
expr Semi expr_list 
(?)

** In state 24, looking ahead at Neq, reducing production
** expr -> expr Plus expr
** is permitted because of the following sub-derivation:

expr Neq expr // lookahead token appears
expr Plus expr . 

** In state 24, looking ahead at Neq, shifting is permitted
** because of the following sub-derivation:

expr Plus expr 
          expr . Neq expr 

** Conflict (shift/reduce) in state 22.
** Tokens involved: Star Slash Plus Neq Minus Less Leq Greater Geq Eq
** The following explanations concentrate on token Star.
** This state is reached from program after reading:

expr Less expr

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

program 
expr_list EOF 
expr Semi expr_list 
(?)

** In state 22, looking ahead at Star, shifting is permitted
** because of the following sub-derivation:

expr Less expr 
          expr . Star expr 

** In state 22, looking ahead at Star, reducing production
** expr -> expr Less expr
** is permitted because of the following sub-derivation:

expr Star expr // lookahead token appears
expr Less expr . 

** Conflict (shift/reduce) in state 20.
** Tokens involved: Neq Less Leq Greater Geq Eq
** The following explanations concentrate on token Neq.
** This state is reached from program after reading:

expr Slash expr

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

program 
expr_list EOF 
expr Semi expr_list 
(?)

** In state 20, looking ahead at Neq, reducing production
** expr -> expr Slash expr
** is permitted because of the following sub-derivation:

expr Neq expr // lookahead token appears
expr Slash expr . 

** In state 20, looking ahead at Neq, shifting is permitted
** because of the following sub-derivation:

expr Slash expr 
           expr . Neq expr 

** Conflict (shift/reduce) in state 18.
** Tokens involved: Star Slash Plus Neq Minus Less Leq Greater Geq Eq
** The following explanations concentrate on token Star.
** This state is reached from program after reading:

expr Neq expr

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

program 
expr_list EOF 
expr Semi expr_list 
(?)

** In state 18, looking ahead at Star, shifting is permitted
** because of the following sub-derivation:

expr Neq expr 
         expr . Star expr 

** In state 18, looking ahead at Star, reducing production
** expr -> expr Neq expr
** is permitted because of the following sub-derivation:

expr Star expr // lookahead token appears
expr Neq expr . 

** Conflict (shift/reduce) in state 16.
** Tokens involved: Neq Less Leq Greater Geq Eq
** The following explanations concentrate on token Neq.
** This state is reached from program after reading:

expr Star expr

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

program 
expr_list EOF 
expr Semi expr_list 
(?)

** In state 16, looking ahead at Neq, reducing production
** expr -> expr Star expr
** is permitted because of the following sub-derivation:

expr Neq expr // lookahead token appears
expr Star expr . 

** In state 16, looking ahead at Neq, shifting is permitted
** because of the following sub-derivation:

expr Star expr 
          expr . Neq expr 

** Conflict (shift/reduce) in state 14.
** Tokens involved: Star Slash Plus Neq Minus Less Leq Greater Geq Eq
** The following explanations concentrate on token Star.
** This state is reached from program after reading:

Var Ident Colon type_expr Assign expr

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

program 
expr_list EOF 
expr Semi expr_list 
(?)

** In state 14, looking ahead at Star, reducing production
** VarDecl -> Var Ident Colon type_expr Assign expr
** is permitted because of the following sub-derivation:

expr Star expr // lookahead token appears
VarDecl // lookahead token is inherited
Var Ident Colon type_expr Assign expr . 

** In state 14, looking ahead at Star, shifting is permitted
** because of the following sub-derivation:

VarDecl 
Var Ident Colon type_expr Assign expr 
                                 expr . Star expr 
